{"version":3,"sources":["store/ducks/questions.js","store/ducks/index.js","store/index.js","styles.js","globalStyle.js","components/Header/styles.js","components/Header/index.js","components/Question/styles.js","components/Title/styles.js","components/Title/index.js","components/Question/ShortAnswer/styles.js","components/Question/ShortAnswer/index.js","components/Question/LongAnswer/styles.js","components/Question/LongAnswer/index.js","components/Question/MultipleAnswer/styles.js","components/Question/MultipleAnswer/index.js","components/Question/index.js","components/QuestionForm/styles.js","components/QuestionForm/Select/index.js","components/QuestionForm/index.js","components/Answers/styles.js","components/Answers/index.js","App.js","index.js"],"names":["Types","CHANGE_TITLE","CHANGE_DESCRIPTION","SET_ANSWERING","ADD_QUESTION","CHANGE_QUESTION","REMOVE_QUESTION","COPY_QUESTION","SET_ACTIVE","SET_INACTIVE","ADD_ANSWERS","CHANGE_TAB","INITIAL_STATE","activeTab","formTitle","formDescription","questions","id","uuidv4","type","question","active","options","option","answers","Creators","changeTitle","title","changeDescription","description","setAnswering","addQuestion","createAfterId","changeQuestion","removeQuestion","copyQuestion","setActive","setInactive","addAnswers","changeTab","newActiveTabId","combineReducers","state","arguments","length","undefined","action","newQuestions","Object","toConsumableArray","objectSpread","currentActiveQuestionIdx","findIndex","newQuestion","createAfterIndex","q","splice","questionIdx","filter","copiedIndex","nextActiveQuestionIdx","keys","map","answerKey","push","composer","applyMiddleware","apply","store","createStore","reducers","Content","styled","div","_templateObject","GlobalStyle","createGlobalStyle","globalStyle_templateObject","Container","styles_templateObject","HeaderContainer","header","_templateObject2","TitleInput","input","_templateObject3","Tab","_templateObject4","TabButton","button","_templateObject5","_ref","Header","_this","this","react_default","a","createElement","value","props","disabled","onClick","Component","connect","dispatch","bindActionCreators","QuestionActions","Question_styles_templateObject","_ref2","QuestionTextArea","textarea","styles_templateObject2","SelectStyled","Select","styles_templateObject3","QuestionHeader","styles_templateObject4","QuestionContent","styles_templateObject5","Actions","_templateObject6","ActionButton","_templateObject7","Title_styles_templateObject","Title_styles_templateObject2","DescriptionTextArea","Title_styles_templateObject3","Title","Title_styles_Container","styles_TitleInput","onFocus","evt","target","select","onChange","placeholder","rows","ShortAnswerInput","ShortAnswer_styles_templateObject","ShortAnswer","react","LongAnswerInput","LongAnswer_styles_templateObject","LongAnswer","Option","MultipleAnswer_styles_templateObject","OptionButton","MultipleAnswer_styles_templateObject2","NewOption","MultipleAnswer_styles_templateObject3","MultipleAnswer","otherAdded","optionCounter","addOption","_this$state","data","setState","newOptions","slice","concat","addOthers","other","removeOption","optionIndex","onChangeOptionInput","optionId","o","_this2","_this$props$data","idx","key","list","radio","className","check","defaultValue","Question","changeType","styles_Container","components_Title","find","op","Question_ShortAnswer","Question_LongAnswer","Question_MultipleAnswer","questionQuantity","label","QuestionForm_styles_templateObject","QuestionTitle","h2","QuestionForm_styles_templateObject2","Input","QuestionForm_styles_templateObject3","QuestionForm_styles_templateObject4","QuestionForm_styles_templateObject5","styles_templateObject6","name","multiple","rest","objectWithoutProperties","ref","useRef","_useField","useField","fieldName","registerField","parseSelectValue","selectValue","useEffect","current","path","parseValue","clearValue","selectRef","selec","react_select_esm","assign","aria-label","isMulti","styles_templateObject7","ActionContainer","_templateObject8","_templateObject9","primary","QuestionForm","_Component","_getPrototypeOf2","classCallCheck","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","inherits","createClass","QuestionForm_styles_Container","index_es","onSubmit","styles_ShortAnswerInput","styles_LongAnswerInput","styles_SelectStyled","styles_ActionButton","Answers_styles_templateObject","Answers_styles_templateObject2","AnswerContainer","Answers_styles_templateObject3","Answers","Answers_styles_Container","styles_QuestionTitle","answer","isArray","App","_this$props","globalStyle","components_Header","components_Question","components_QuestionForm","components_Answers","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.0c8b342b.chunk.js","sourcesContent":["import uuidv4 from 'uuid/v4'\n// TYPES\n\nexport const Types = {\n  CHANGE_TITLE: 'questions/CHANGE_TITLE',\n  CHANGE_DESCRIPTION: 'questions/CHANGE_DESCRIPTION',\n  SET_ANSWERING: 'questions/SET_ANSWERING',\n  ADD_QUESTION: 'questions/ADD_QUESTION',\n  CHANGE_QUESTION: 'questions/CHANGE_QUESTION',\n  REMOVE_QUESTION: 'questions/REMOVE_QUESTION',\n  COPY_QUESTION: 'questions/COPY_QUESTION',\n  SET_ACTIVE: 'questions/SET_ACTIVE',\n  SET_INACTIVE: 'questions/SET_INACTIVE',\n  ADD_ANSWERS: 'questions/ADD_ANSWERS',\n  CHANGE_TAB: 'questions/CHANGE_TAB'\n}\n\n// REDUCERS\n\nconst INITIAL_STATE = {\n  activeTab: 0,\n  formTitle: 'Título do formulário de exemplo',\n  formDescription:\n    'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis fermentum libero quis eros congue, eu egestas diam tincidunt. Vivamus maximus pharetra porta. Nunc a purus sollicitudin, vehicula nunc commodo, hendrerit odio. In hac habitasse platea dictumst. Phasellus sollicitudin placerat neque, eu mollis felis sodales ac.',\n  questions: [\n    {\n      id: uuidv4(),\n      type: 'short',\n      question: 'Pergunta com resposta curta',\n      active: true,\n      options: [{ id: uuidv4(), option: 'Opção 1' }],\n      answers: []\n    },\n    {\n      id: uuidv4(),\n      type: 'long',\n      question: 'Pergunta com resposta longa',\n      options: [{ id: uuidv4(), option: 'Opção 1' }],\n      answers: []\n    },\n    {\n      id: uuidv4(),\n      type: 'radio',\n      question: 'Pergunta com opção única',\n      options: [\n        { id: uuidv4(), option: 'Opção 1' },\n        { id: uuidv4(), option: 'Opção 2' }\n      ],\n      answers: []\n    },\n    {\n      id: uuidv4(),\n      type: 'check',\n      question: 'Pergunta com opção múltipla',\n      options: [\n        { id: uuidv4(), option: 'Opção 1' },\n        { id: uuidv4(), option: 'Opção 2' },\n        { id: uuidv4(), option: 'Opção 3' },\n        { id: uuidv4(), option: 'Opção 4' }\n      ],\n      answers: []\n    },\n    {\n      id: uuidv4(),\n      type: 'list',\n      question: 'Pergunta com seleção em lista',\n      options: [\n        { id: uuidv4(), option: 'Opção A' },\n        { id: uuidv4(), option: 'Opção B' },\n        { id: uuidv4(), option: 'Opção C' }\n      ],\n      answers: []\n    }\n  ]\n}\n\nexport default function questions (state = INITIAL_STATE, action) {\n  let newQuestions = [...state.questions]\n\n  switch (action.type) {\n    case Types.CHANGE_TITLE: {\n      return { ...state, formTitle: action.title }\n    }\n    case Types.CHANGE_DESCRIPTION: {\n      return { ...state, formDescription: action.description }\n    }\n    case Types.SET_ANSWERING: {\n      const currentActiveQuestionIdx = newQuestions.findIndex(\n        question => question.active === true\n      )\n      newQuestions[currentActiveQuestionIdx] = {\n        ...newQuestions[currentActiveQuestionIdx],\n        active: false\n      }\n      return {\n        ...state,\n        questions: newQuestions,\n        activeTab: action.activeTab\n      }\n    }\n    case Types.ADD_QUESTION: {\n      const newQuestion = action.question\n        ? action.question\n        : { ...INITIAL_STATE.questions[0], id: uuidv4(), active: true }\n      const createAfterIndex = newQuestions.findIndex(\n        q => q.id === action.createAfterId\n      )\n      newQuestions.splice(createAfterIndex + 1, 0, newQuestion)\n      return { ...state, questions: newQuestions }\n    }\n    case Types.CHANGE_QUESTION: {\n      let questionIdx = state.questions.findIndex(\n        question => question.id === action.question.id\n      )\n      const newQuestions = [...state.questions]\n      newQuestions[questionIdx] = {\n        ...action.question\n      }\n      return {\n        ...state,\n        questions: [...newQuestions]\n      }\n    }\n    case Types.REMOVE_QUESTION: {\n      return {\n        ...state,\n        questions: newQuestions.filter(q => q.id !== action.id)\n      }\n    }\n    case Types.COPY_QUESTION: {\n      const copiedIndex = newQuestions.findIndex(q => q.id === action.id)\n      newQuestions.splice(copiedIndex + 1, 0, {\n        ...newQuestions[copiedIndex],\n        id: uuidv4(),\n        active: true,\n        answers: []\n      })\n      return { ...state, questions: newQuestions }\n    }\n    case Types.SET_ACTIVE: {\n      const currentActiveQuestionIdx = newQuestions.findIndex(\n        question => question.active === true\n      )\n      const nextActiveQuestionIdx = newQuestions.findIndex(\n        question => question.id === action.id\n      )\n      newQuestions[currentActiveQuestionIdx] = {\n        ...newQuestions[currentActiveQuestionIdx],\n        active: false\n      }\n      newQuestions[nextActiveQuestionIdx] = {\n        ...newQuestions[nextActiveQuestionIdx],\n        active: true\n      }\n      return { ...state, questions: newQuestions }\n    }\n    case Types.SET_INACTIVE: {\n      const questionIdx = newQuestions.findIndex(\n        question => question.id === action.id\n      )\n      newQuestions[questionIdx] = {\n        ...newQuestions[questionIdx],\n        active: false\n      }\n      return { ...state, questions: newQuestions }\n    }\n    case Types.ADD_ANSWERS: {\n      const { answers } = action\n      Object.keys(answers).map(answerKey => {\n        const questionIdx = newQuestions.findIndex(q => q.id === answerKey)\n        return newQuestions[questionIdx].answers.push(answers[answerKey])\n      })\n      return { ...state, activeTab: 2, questions: newQuestions }\n    }\n    case Types.CHANGE_TAB: {\n      return { ...state, activeTab: action.activeTab }\n    }\n    default:\n      return state\n  }\n}\n\n// ACTIONS\n\nexport const Creators = {\n  changeTitle: title => ({\n    type: Types.CHANGE_TITLE,\n    title: title\n  }),\n  changeDescription: description => ({\n    type: Types.CHANGE_DESCRIPTION,\n    description: description\n  }),\n  setAnswering: activeTab => ({\n    type: Types.SET_ANSWERING,\n    activeTab: activeTab\n  }),\n  addQuestion: (question, createAfterId) => ({\n    type: Types.ADD_QUESTION,\n    question: question,\n    createAfterId: createAfterId\n  }),\n  changeQuestion: question => ({\n    type: Types.CHANGE_QUESTION,\n    question: question\n  }),\n  removeQuestion: id => ({\n    type: Types.REMOVE_QUESTION,\n    id: id\n  }),\n  copyQuestion: id => ({\n    type: Types.COPY_QUESTION,\n    id: id\n  }),\n  setActive: id => ({\n    type: Types.SET_ACTIVE,\n    id: id\n  }),\n  setInactive: id => ({\n    type: Types.SET_INACTIVE,\n    id: id\n  }),\n  addAnswers: answers => ({\n    type: Types.ADD_ANSWERS,\n    answers: answers\n  }),\n  changeTab: newActiveTabId => ({\n    type: Types.CHANGE_TAB,\n    activeTab: newActiveTabId\n  })\n}\n","import { combineReducers } from 'redux'\n\nimport questions from './questions'\n\nexport default combineReducers({ questions })\n","import { createStore, applyMiddleware, compose } from 'redux'\n\nimport reducers from './ducks'\n\nconst middlewares = []\n\nconst composer =\n  process.env.NODE_ENV === 'development'\n    ? compose(\n      applyMiddleware(...middlewares),\n      console.tron.createEnhancer()\n    )\n    : applyMiddleware(...middlewares)\n\nconst store = createStore(reducers, composer)\n\nexport default store\n","import styled from 'styled-components'\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n","import { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n  body {\n    text-rendering: optimizeLegibility !important;\n    font-family: 'Roboto',Helvetica,Arial,sans-serif;\n    background: #F1ECF8;\n  }\n`\n\nexport default GlobalStyle\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 184px;\n  background: #6739b8;\n  justify-content: flex-end;\n  align-items: center;\n`\nexport const HeaderContainer = styled.header`\n  width: 100%;\n  height: 135px;\n`\nexport const TitleInput = styled.input`\n  background: none;\n  border: none;\n  font-size: 20px;\n  font-weight: bold;\n  color: #fff;\n  margin-top: 28px;\n  margin-left: 80px;\n  width: 100%;\n`\n\nexport const Tab = styled.div`\n  display: flex;\n  justify-content: center;\n  background: #fff;\n  width: 770px;\n  height: 49px;\n  border-bottom: 1px solid #e4e4e4;\n`\nexport const TabButton = styled.button`\n  width: 128px;\n  font-size: 14px;\n  font-weight: 600;\n  background: none;\n  border: none;\n  color: #898989;\n  cursor: pointer;\n  ${({ active }) =>\n    active === true &&\n    `\n    color: #6739b8;\n    border-bottom: 2px solid #6739b8;\n  `}\n`\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport { Creators as QuestionActions } from '../../store/ducks/questions'\n\nimport {\n  Container,\n  HeaderContainer,\n  TitleInput,\n  Tab,\n  TabButton\n} from './styles'\n\nclass Header extends Component {\n  render () {\n    return (\n      <Container>\n        <HeaderContainer>\n          <TitleInput\n            type=\"text\"\n            value={this.props.formTitle}\n            disabled={true}\n          />\n        </HeaderContainer>\n        <Tab>\n          <TabButton\n            active={this.props.activeTab === 0}\n            onClick={() => this.props.setAnswering(0)}\n          >\n            PERGUNTAS\n          </TabButton>\n          <TabButton\n            active={this.props.activeTab === 1}\n            onClick={() => this.props.setAnswering(1)}\n          >\n            RESPONDER\n          </TabButton>\n          <TabButton\n            active={this.props.activeTab === 2}\n            onClick={() => this.props.setAnswering(2)}\n          >\n            RESPOSTAS\n          </TabButton>\n        </Tab>\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = ({ questions }) => ({\n  activeTab: questions.activeTab,\n  formTitle: questions.formTitle\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({ setAnswering: QuestionActions.setAnswering }, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Header)\n","import styled from 'styled-components'\nimport Select from 'react-select'\n\nexport const Container = styled.div`\n  width: 770px;\n  background: #fff;\n  display: flex;\n  flex-direction: column;\n  padding-left: 50px;\n  ${({ active }) =>\n    active &&\n    `\n    border-left: 3px solid #5D8EE5\n    -webkit-box-shadow: 0px 0px 8px 0px rgba(0,0,0,0.30);\n    -moz-box-shadow: 0px 0px 8px 0px rgba(0,0,0,0.30);\n    box-shadow: 0px 0px 8px 0px rgba(0,0,0,0.30);\n    z-index: 1\n  `}\n  ${({ active }) =>\n    !active &&\n    `\n    padding-bottom: 10px; \n  `}\n`\n\nexport const QuestionTextArea = styled.textarea`\n  font-size: 18px;\n  border: none;\n  resize: none;\n  width: 394px;\n  height: 30px;\n  border-bottom: 1px solid #e5e5e5;\n  &::placeholder {\n    color: #aaaaaa;\n  }\n`\n\nexport const SelectStyled = styled(Select)`\n  width: 256px;\n  margin-right: 24px;\n`\nexport const QuestionHeader = styled.div`\n  height: 40px;\n  margin-top: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\nexport const QuestionContent = styled.div`\n  min-height: 90px;\n`\n\nexport const Actions = styled.div`\n  height: 65px;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  padding-right: 24px;\n  border-top: 1px solid #e5e5e5;\n`\n\nexport const ActionButton = styled.button`\n  font-size: 18px;\n  height: 30px;\n  width: 30px;\n  border: none;\n  background: none;\n  color: #828282;\n  cursor: pointer;\n  &:disabled {\n    color: #e6e6e6;\n  }\n`\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  width: 770px;\n  background: #fff;\n  display: flex;\n  flex-direction: column;\n  padding-left: 50px;\n`\n\nexport const TitleInput = styled.input`\n  margin: 36px 24px 0 0;\n  font-size: 34px;\n  border: none;\n  border-bottom: 1px solid #e5e5e5;\n  padding-bottom: 12px;\n`\n\nexport const DescriptionTextArea = styled.textarea`\n  margin: 26px 24px 36px 0;\n  padding: 5px;\n  font-size: 12px;\n  border: none;\n  resize: none;\n  border: 1px solid #e5e5e5;\n  line-height: 12px;\n  height: auto;\n  &::placeholder {\n    color: #aaaaaa;\n  }\n`\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport { Creators as QuestionActions } from '../../store/ducks/questions'\n\nimport { Container, TitleInput, DescriptionTextArea } from './styles'\n\nclass Title extends Component {\n  render () {\n    return (\n      <Container>\n        <TitleInput\n          value={this.props.formTitle}\n          onFocus={evt =>\n            evt.target.value === 'Formulário sem Título'\n              ? evt.target.select()\n              : ''\n          }\n          onChange={evt => this.props.changeTitle(evt.target.value)}\n        />\n        <DescriptionTextArea\n          placeholder=\"Descrição do formulário\"\n          rows=\"10\"\n          value={this.props.formDescription}\n          onChange={evt => this.props.changeDescription(evt.target.value)}\n        />\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = ({ questions }) => ({\n  formTitle: questions.formTitle,\n  formDescription: questions.formDescription\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      changeTitle: QuestionActions.changeTitle,\n      changeDescription: QuestionActions.changeDescription\n    },\n    dispatch\n  )\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Title)\n","import styled from 'styled-components'\n\nexport const ShortAnswerInput = styled.input`\n  font-size: 12px;\n  border: none;\n  padding-top: 26px;\n  padding-bottom: 5px;\n  width: 358px;\n  border-bottom: 1px solid #e5e5e5;\n  &::placeholder {\n    color: #aaaaaa;\n  }\n`\n","import React, { Fragment } from 'react'\n\nimport { ShortAnswerInput } from './styles'\n\nconst ShortAnswer = () => {\n  return (\n    <Fragment>\n      <ShortAnswerInput placeholder=\"Texto de Resposta Curta\" disabled={true} />\n    </Fragment>\n  )\n}\n\nexport default ShortAnswer\n","import styled from 'styled-components'\n\nexport const LongAnswerInput = styled.textarea`\n  font-size: 12px;\n  border: none;\n  margin-top: 26px;\n  width: 598px;\n  line-height: 12px;\n  resize: none;\n  border-bottom: 1px solid #e5e5e5;\n  &::placeholder {\n    color: #aaaaaa;\n  }\n`\n","import React, { Fragment } from 'react'\n\nimport { LongAnswerInput } from './styles'\n\nconst LongAnswer = () => {\n  return (\n    <Fragment>\n      <LongAnswerInput placeholder=\"Texto de Resposta Longa\" disabled={true} />\n    </Fragment>\n  )\n}\n\nexport default LongAnswer\n","import styled from 'styled-components'\n\nexport const Option = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 20px;\n  span {\n    font-size: 14px;\n    color: #000;\n  }\n  input[type='text'] {\n    width: 630px;\n    padding-bottom: 3px;\n    font-size: 14px;\n    border: 0;\n    margin-right: 12px;\n    &:disabled {\n      color: #838383;\n    }\n    &:hover {\n      border-bottom: 1px solid #e5e5e5;\n    }\n  }\n  button:last-child {\n    border: 0;\n    color: #838383;\n    font-size: 22px;\n  }\n`\n\nexport const OptionButton = styled.button`\n  border: 0;\n  font-size: 22px;\n  color: #cacaca;\n  margin-right: 12px;\n  vertical-align: center;\n`\nexport const NewOption = styled.div`\n  display: flex;\n  margin-top: 20px;\n  margin-bottom: 30px;\n  align-items: center;\n  font-size: 13px;\n  color: #838383;\n  button:nth-child(2) {\n    border: 0;\n    color: #838383;\n    font-size: 13px;\n    margin-right: 5px;\n    &:hover {\n      border-bottom: 1px solid #e5e5e5;\n    }\n  }\n  button.addOther {\n    border: 0;\n    font-size: 13px;\n    font-weight: bold;\n    color: #3970be;\n    margin-left: 5px;\n  }\n  input[type='text'] {\n    width: 630px;\n    font-size: 14px;\n    border: 0;\n    border-bottom: 1px solid #e5e5e5;\n    margin-left: 12px;\n    margin-right: 12px;\n  }\n`\n","import React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport uuidv4 from 'uuid/v4'\n\nimport { Creators as QuestionActions } from '../../../store/ducks/questions'\n\nimport { Option, OptionButton, NewOption } from './styles'\n\nclass MultipleAnswer extends Component {\n  state = {\n    otherAdded: false,\n    optionCounter: 2\n  }\n\n  addOption = () => {\n    const { otherAdded, optionCounter } = this.state\n    const { options } = this.props.data\n    this.setState({ optionCounter: this.state.optionCounter + 1 })\n    if (otherAdded) {\n      let newOptions = options.slice()\n      newOptions.splice(options.length - 1, 0, {\n        id: uuidv4(),\n        option: `Opção ${optionCounter}`\n      })\n      this.props.changeQuestion({\n        ...this.props.data,\n        options: [...newOptions]\n      })\n    } else {\n      this.props.changeQuestion({\n        ...this.props.data,\n        options: [\n          ...options,\n          { id: uuidv4(), option: `Opção ${optionCounter}` }\n        ]\n      })\n    }\n  }\n\n  addOthers = () => {\n    const { options } = this.props.data\n    this.setState({ otherAdded: true })\n    this.props.changeQuestion({\n      ...this.props.data,\n      options: [...options, { id: uuidv4(), option: 'Outros...', other: true }]\n    })\n  }\n\n  removeOption = id => {\n    const { options } = this.props.data\n    const optionIndex = options.findIndex(option => option.id === id)\n    const newOptions = options.slice()\n    if (!options[optionIndex].other)\n      this.setState({ optionCounter: this.state.optionCounter - 1 })\n    else this.setState({ otherAdded: false })\n    newOptions.splice(optionIndex, 1)\n    this.props.changeQuestion({\n      ...this.props.data,\n      options: [...newOptions]\n    })\n  }\n\n  onChangeOptionInput = (optionId, value) => {\n    const newOptions = [...this.props.data.options]\n    const optionIndex = newOptions.findIndex(o => o.id === optionId)\n    newOptions.splice(optionIndex, 1, {\n      ...newOptions[optionIndex],\n      option: value\n    })\n    this.props.changeQuestion({\n      ...this.props.data,\n      options: newOptions\n    })\n  }\n\n  render() {\n    const { otherAdded } = this.state\n    const { options, active } = this.props.data\n    return (\n      <Fragment>\n        {options.map((option, idx) => (\n          <Option key={option.id}>\n            {this.props.list && <span>{idx + 1}.</span>}\n            <OptionButton>\n              {this.props.radio && <i className=\"far fa-circle\" />}\n              {this.props.check && <i className=\"far fa-square\" />}\n            </OptionButton>\n            <input\n              type=\"text\"\n              defaultValue={option.option}\n              disabled={option.other}\n              onChange={evt =>\n                this.onChangeOptionInput(option.id, evt.target.value)\n              }\n              onFocus={evt => evt.target.select()}\n            />\n            {active && (\n              <button onClick={() => this.removeOption(option.id)}>\n                <i className=\"fas fa-times\" />\n              </button>\n            )}\n          </Option>\n        ))}\n        {active && (\n          <NewOption>\n            <OptionButton>\n              {this.props.radio && <i className=\"far fa-circle\" />}\n              {this.props.check && <i className=\"far fa-square\" />}\n            </OptionButton>\n            <button onClick={this.addOption}>Adicionar opção</button>\n            {!otherAdded && !this.props.list && (\n              <div>\n                ou\n                <button onClick={this.addOthers} className=\"addOther\">\n                  ADICIONAR \"OUTRO\"\n                </button>\n              </div>\n            )}\n          </NewOption>\n        )}\n      </Fragment>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      changeQuestion: QuestionActions.changeQuestion\n    },\n    dispatch\n  )\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(MultipleAnswer)\n","import React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { Creators as QuestionActions } from '../../store/ducks/questions'\n\nimport {\n  Container,\n  QuestionHeader,\n  QuestionTextArea,\n  QuestionContent,\n  SelectStyled,\n  Actions,\n  ActionButton\n} from './styles'\nimport Title from '../Title'\nimport ShortAnswer from './ShortAnswer'\nimport LongAnswer from './LongAnswer'\nimport MultipleAnswer from './MultipleAnswer'\n\nclass Question extends Component {\n  setActive = () => {\n    if (!this.props.data.active) this.props.setActive(this.props.data.id)\n  }\n\n  changeType = type => {\n    this.props.changeQuestion({\n      ...this.props.data,\n      type: type\n    })\n  }\n\n  changeQuestion = value => {\n    this.props.changeQuestion({\n      ...this.props.data,\n      question: value\n    })\n  }\n\n  addQuestion = () => {\n    this.props.setInactive(this.props.data.id)\n    this.props.addQuestion(null, this.props.data.id)\n  }\n\n  copyQuestion = () => {\n    this.props.setInactive(this.props.data.id)\n    this.props.copyQuestion(this.props.data.id)\n  }\n\n  render() {\n    const { data } = this.props\n    const { active, type, question } = data\n    return (\n      <Container active={active} onClick={this.setActive}>\n        {type === 'title' && <Title />}\n        {type !== 'title' && (\n          <Fragment>\n            <Fragment>\n              <QuestionHeader>\n                <QuestionTextArea\n                  placeholder=\"Pergunta\"\n                  value={question}\n                  onChange={evt => this.changeQuestion(evt.target.value)}\n                />\n                {active && (\n                  <SelectStyled\n                    options={options}\n                    defaultValue={options.find(op => op.value === type)}\n                    onChange={evt => this.changeType(evt.value)}\n                  />\n                )}\n              </QuestionHeader>\n              <QuestionContent>\n                {type === 'short' && <ShortAnswer />}\n                {type === 'long' && <LongAnswer />}\n                {type === 'radio' && (\n                  <MultipleAnswer radio active={active} data={data} />\n                )}\n                {type === 'check' && (\n                  <MultipleAnswer check active={active} data={data} />\n                )}\n                {type === 'list' && (\n                  <MultipleAnswer list active={active} data={data} />\n                )}\n              </QuestionContent>\n            </Fragment>\n            {active && (\n              <Actions>\n                <ActionButton onClick={this.addQuestion}>\n                  <i className=\"fas fa-plus\" />\n                </ActionButton>\n                <ActionButton onClick={this.copyQuestion}>\n                  <i className=\"far fa-clone\" />\n                </ActionButton>\n                <ActionButton\n                  onClick={() => this.props.removeQuestion(data.id)}\n                  disabled={this.props.questionQuantity === 1}\n                >\n                  <i className=\"fas fa-trash\" />\n                </ActionButton>\n              </Actions>\n            )}\n          </Fragment>\n        )}\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = ({ questions }) => ({\n  questionQuantity: questions.questions.length\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(QuestionActions, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Question)\n\nconst options = [\n  { value: 'short', label: 'Resposta Curta' },\n  { value: 'long', label: 'Parágrafo' },\n  { value: 'radio', label: 'Opção única' },\n  { value: 'check', label: 'Seleção Múltipla' },\n  { value: 'list', label: 'Lista Suspensa' }\n]\n","import styled from 'styled-components'\nimport Select from './Select'\n\nimport { Input } from '@rocketseat/unform'\n\nexport const Container = styled.div`\n  width: 770px;\n  background: #fff;\n  display: flex;\n  flex-direction: column;\n  padding: 42px 36px 32px 36px;\n  margin-bottom: 20px;\n  h1 {\n    font-size: 35px;\n    font-weight: normal;\n  }\n  p {\n    margin-top: 32px;\n    font-size: 13px;\n  }\n`\n\nexport const QuestionTitle = styled.h2`\n  font-size: 20px;\n  font-weight: normal;\n  margin-top: 36px;\n`\n\nexport const ShortAnswerInput = styled(Input)`\n  font-size: 12px;\n  border: none;\n  padding-top: 26px;\n  padding-bottom: 5px;\n  width: 358px;\n  border-bottom: 1px solid #e5e5e5;\n  &::placeholder {\n    color: #aaaaaa;\n  }\n`\n\nexport const LongAnswerInput = styled(Input)`\n  font-size: 12px;\n  border: none;\n  margin-top: 26px;\n  margin-right: 36px;\n  line-height: 12px;\n  width: 100%;\n  resize: none;\n  border-bottom: 1px solid #e5e5e5;\n  &::placeholder {\n    color: #aaaaaa;\n  }\n`\n\nexport const Option = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 20px;\n  span {\n    width: 630px;\n    padding-bottom: 3px;\n    font-size: 14px;\n    border: 0;\n    margin-right: 12px;\n  }\n  label {\n    width: 630px;\n    padding-bottom: 3px;\n    font-size: 14px;\n    border: 0;\n    margin-left: 12px;\n    margin-right: 12px;\n  }\n`\n\nexport const OptionButton = styled.button`\n  border: 0;\n  font-size: 22px;\n  color: #cacaca;\n  margin-right: 12px;\n  vertical-align: center;\n`\nexport const SelectStyled = styled(Select)`\n  margin-top: 20px;\n`\n\nexport const ActionContainer = styled.div`\n  margin-top: 20px;\n`\nexport const ActionButton = styled.button`\n  border: none;\n  width: 88px;\n  height: 36px;\n  color: #222;\n  background: #eee;\n  margin-right: 15px;\n  border-radius: 4px;\n  font-size: 12px;\n  font-weight: bold;\n  cursor: pointer;\n  ${({ primary }) =>\n    primary &&\n    `\n    color: #FFF;\n    background: #1A73E8\n  `}\n`\n","import React, { useRef, useEffect } from 'react'\nimport ReactSelect from 'react-select'\n\nimport { useField } from '@rocketseat/unform'\n\nexport default function Select ({ name, label, options, multiple, ...rest }) {\n  const ref = useRef(null)\n  const { fieldName, registerField } = useField(name)\n\n  function parseSelectValue (selectValue) {\n    if (!multiple) {\n      return selectValue ? selectValue.id : ''\n    }\n    return selectValue ? selectValue.map(option => option.id) : []\n  }\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: ref.current,\n      path: 'state.value',\n      parseValue: parseSelectValue,\n      clearValue: selectRef => {\n        selectRef.selec.clearValue()\n      }\n    })\n  })\n\n  return (\n    <ReactSelect\n      name={fieldName}\n      aria-label={fieldName}\n      options={options}\n      isMulti={multiple}\n      ref={ref}\n      // getOptionValue={option => option.id}\n      // getOptionLabel={option => option.title}\n      {...rest}\n    />\n  )\n}\n","import React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport { Form } from '@rocketseat/unform'\n\nimport { Creators as QuestionActions } from '../../store/ducks/questions'\n\nimport {\n  Container,\n  QuestionTitle,\n  ShortAnswerInput,\n  LongAnswerInput,\n  SelectStyled,\n  ActionButton,\n  ActionContainer\n} from './styles'\n\nexport class QuestionForm extends Component {\n  handleSubmit = data => {\n    this.props.addAnswers(data)\n  }\n  render() {\n    return (\n      <Container>\n        <h1>{this.props.formTitle}</h1>\n        <p>{this.props.formDescription}</p>\n        <Form onSubmit={this.handleSubmit}>\n          {this.props.questions.map(question => {\n            switch (question.type) {\n              case 'short':\n                return (\n                  <Fragment key={question.id}>\n                    <QuestionTitle>{question.question}</QuestionTitle>\n                    <ShortAnswerInput\n                      name={question.id}\n                      placeholder=\"Texto de Resposta Curta\"\n                    />\n                  </Fragment>\n                )\n              case 'long':\n                return (\n                  <Fragment key={question.id}>\n                    <QuestionTitle>{question.question}</QuestionTitle>\n                    <LongAnswerInput\n                      placeholder=\"Texto de Resposta Curta\"\n                      name={question.id}\n                    />\n                  </Fragment>\n                )\n              case 'radio':\n                return (\n                  <Fragment key={question.id}>\n                    <QuestionTitle>{question.question}</QuestionTitle>\n                    {/* Using as Select as unform is not prepared for radios / checkbox  */}\n                    <SelectStyled\n                      name={question.id}\n                      options={question.options.map(op => ({\n                        value: op.id,\n                        label: op.option\n                      }))}\n                      placeholder=\"Escolha uma opção\"\n                    />\n                  </Fragment>\n                )\n              case 'check':\n                return (\n                  <Fragment key={question.id}>\n                    <QuestionTitle>{question.question}</QuestionTitle>\n                    {/* Using as Select as unform is not prepared for radios / checkbox  */}\n                    <SelectStyled\n                      name={question.id}\n                      options={question.options.map(op => ({\n                        value: op.id,\n                        label: op.option\n                      }))}\n                      isMulti={true}\n                      placeholder=\"Escolha uma ou mais opções\"\n                    />\n                  </Fragment>\n                )\n              case 'list':\n                return (\n                  <Fragment key={question.id}>\n                    <QuestionTitle>{question.question}</QuestionTitle>\n                    <SelectStyled\n                      name={question.id}\n                      options={question.options.map(op => ({\n                        value: op.id,\n                        label: op.option\n                      }))}\n                      placeholder=\"Escolha uma opção\"\n                    />\n                  </Fragment>\n                )\n              default:\n                return ''\n            }\n          })}\n          <ActionContainer>\n            <ActionButton type=\"button\" onClick={() => this.props.changeTab(0)}>\n              VOLTAR\n            </ActionButton>\n            <ActionButton type=\"submit\" primary>\n              ENVIAR\n            </ActionButton>\n          </ActionContainer>\n        </Form>\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = ({ questions }) => questions\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      addAnswers: QuestionActions.addAnswers,\n      changeTab: QuestionActions.changeTab\n    },\n    dispatch\n  )\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(QuestionForm)\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  width: 770px;\n  background: #fff;\n  display: flex;\n  flex-direction: column;\n  padding: 42px 36px 32px 36px;\n  margin-bottom: 20px;\n  h1 {\n    font-size: 35px;\n    font-weight: normal;\n  }\n  p {\n    margin-top: 32px;\n    font-size: 13px;\n  }\n`\n\nexport const QuestionTitle = styled.h2`\n  font-size: 20px;\n  font-weight: normal;\n  margin-top: 36px;\n`\n\nexport const AnswerContainer = styled.div`\n  background: #e9e9e9;\n  color: #5b5b5b;\n  margin-top: 5px;\n  border-radius: 3px;\n  padding: 5px;\n  font-size: 13px;\n`\n","import React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux'\n\nimport { Container, QuestionTitle, AnswerContainer } from './styles'\n\nclass Answers extends Component {\n  render () {\n    const questions = [...this.props.questions]\n\n    return (\n      <Container>\n        <h1>{this.props.formTitle}</h1>\n        <p>{this.props.formDescription}</p>\n        {questions.map(question => (\n          <Fragment>\n            <QuestionTitle>{question.question}</QuestionTitle>\n            {question.answers &&\n              question.answers.map(answer => {\n                let label = ''\n                if (Array.isArray(answer)) {\n                  answer.map(\n                    a =>\n                      (label = label === '' ? a.label : `${label}, ${a.label}`)\n                  )\n                } else {\n                  if (answer) label = !answer.label ? answer : answer.label\n                  else label = 'Não respondida'\n                }\n                return <AnswerContainer>{label}</AnswerContainer>\n              })}\n            {question.answers.length === 0 && (\n              <AnswerContainer>Não respondida</AnswerContainer>\n            )}\n          </Fragment>\n        ))}\n        {/* <QuestionTitle>Pergunta</QuestionTitle>\n        <AnswerContainer>Teste</AnswerContainer>\n        <QuestionTitle>Pergunta</QuestionTitle>\n        <AnswerContainer>Teste</AnswerContainer> */}\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = ({ formTitle, formDescription, questions }) => questions\n\nexport default connect(mapStateToProps)(Answers)\n","import React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux'\n\nimport { Content } from './styles'\n\nimport GlobalStyle from './globalStyle'\nimport Header from './components/Header'\nimport Question from './components/Question'\nimport Title from './components/Title'\nimport QuestionForm from './components/QuestionForm'\nimport Answers from './components/Answers'\n\nclass App extends Component {\n  render () {\n    const { questions, activeTab } = this.props\n    return (\n      <Fragment>\n        <GlobalStyle />\n        <Header />\n        <Content>\n          {activeTab === 0 && (\n            <Fragment>\n              <Title />\n              {questions.map(question => (\n                <Question data={question} key={question.id} />\n              ))}\n            </Fragment>\n          )}\n          {activeTab === 1 && <QuestionForm />}\n          {activeTab === 2 && <Answers />}\n        </Content>\n      </Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  activeTab: state.questions.activeTab,\n  questions: state.questions.questions\n})\n\nexport default connect(mapStateToProps)(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\n\nimport './config/ReactotronConfig'\n\nimport store from './store'\nimport App from './App'\n\nimport '@fortawesome/fontawesome-free/css/all.css'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}